/*
 * Copyright (c) 2017, Derwent Ready @ Drentsoft
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 * 3. Neither the name of the copyright holder nor the names of its contributors 
 *    may be used to endorse or promote products derived from this software 
 *    without specific prior written permission. 
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
package com.drentsoft.cardresizer.ui;

import com.drentsoft.cardresizer.CardResizer;
import com.drentsoft.cardresizer.FileCheck;
import com.drentsoft.cardresizer.ui.imagejob.ImageJobPanel;
import com.drentsoft.cardresizer.ui.pdfjob.PDFJobPanel;
import com.drentsoft.cardresizer.job.ImageJob;
import com.drentsoft.cardresizer.job.PDFJob;
import com.drentsoft.cardresizer.job.ResizeJob;
import java.awt.Component;
import java.beans.PropertyChangeEvent;
import java.io.File;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import javax.swing.SwingWorker.StateValue;

/**
 *
 * @author Derwent Ready @ Drentsoft
 */
public class GlobalPanel extends javax.swing.JPanel {
    
    public static final String PROCESS_READY = "Process Jobs";
    public static final String PROCESS_RUNNING = "Processing...";
    
    ArrayList<ResizeJob> jobs;
    
    int imageJobs;
    int PDFJobs;
    
    public static JFileChooser fc;
    
    static DefaultComboBoxModel masksModel;

    /**
     * Creates new form GlobalPanel
     */
    public GlobalPanel() {
        initComponents();
        jobs = new ArrayList();
        fc = new JFileChooser();
        fc.setCurrentDirectory( new File(CardResizer.properties.getProperty(CardResizer.DIR_SETTING)) );
        masksModel = new DefaultComboBoxModel();
        masksCmbo.setModel(masksModel);
    }
    
    public void createImageJob() {
        ImageJob newJob = new ImageJob();
        jobs.add( newJob );
        jobTabs.add( "Image Job " + ++imageJobs, new ImageJobPanel( newJob ) );
        jobTabs.setSelectedIndex( jobTabs.getTabCount() - 1 );
    }
    
    public void createPDFJob() {
        PDFJob newJob = new PDFJob();
        jobs.add( newJob );
        PDFJobPanel newPnl = new PDFJobPanel(newJob);
        newPnl.setProfilesModel(CardResizer.iccProfiles);
        jobTabs.add( "PDF Job " + ++PDFJobs, newPnl );
        jobTabs.setSelectedIndex( jobTabs.getTabCount() - 1 );
    }
     
    public void updatePDFJobs() {
        for( Component c : jobTabs.getComponents() ) {
            if( c instanceof PDFJobPanel ) {
                PDFJobPanel p = (PDFJobPanel) c;
                p.setProfilesModel(CardResizer.iccProfiles);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        maskLbl = new javax.swing.JLabel();
        maskBrowseField = new javax.swing.JTextField();
        maskBrowseBtn = new javax.swing.JButton();
        loadedMasksLbl = new javax.swing.JLabel();
        masksCmbo = new javax.swing.JComboBox<>();
        newImgJobBtn = new javax.swing.JButton();
        remJobBtn = new javax.swing.JButton();
        jobTabs = new javax.swing.JTabbedPane();
        runJobsBtn = new javax.swing.JButton();
        remMaskBtn = new javax.swing.JButton();
        copyJobBtn = new javax.swing.JButton();
        renameBtn = new javax.swing.JButton();
        newPDFJobBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(102, 102, 102));

        maskLbl.setForeground(new java.awt.Color(255, 255, 255));
        maskLbl.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        maskLbl.setText("Load Mask:");
        maskLbl.setToolTipText("");

        maskBrowseField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maskBrowseFieldActionPerformed(evt);
            }
        });

        maskBrowseBtn.setText("Browse");
        maskBrowseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maskBrowseBtnActionPerformed(evt);
            }
        });

        loadedMasksLbl.setForeground(new java.awt.Color(255, 255, 255));
        loadedMasksLbl.setText("Loaded Masks:");

        newImgJobBtn.setText("Create Image Job");
        newImgJobBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newImgJobBtnActionPerformed(evt);
            }
        });

        remJobBtn.setText("Remove Job");
        remJobBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remJobBtnActionPerformed(evt);
            }
        });

        runJobsBtn.setText("Process Jobs");
        runJobsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runJobsBtnActionPerformed(evt);
            }
        });

        remMaskBtn.setText("Remove");
        remMaskBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remMaskBtnActionPerformed(evt);
            }
        });

        copyJobBtn.setText("Copy Job");
        copyJobBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyJobBtnActionPerformed(evt);
            }
        });

        renameBtn.setText("Rename Job");
        renameBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                renameBtnActionPerformed(evt);
            }
        });

        newPDFJobBtn.setText("Create PDF Job");
        newPDFJobBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newPDFJobBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jobTabs)
            .addComponent(runJobsBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(newImgJobBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newPDFJobBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(copyJobBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(renameBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(remJobBtn))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(loadedMasksLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(maskLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(maskBrowseField)
                    .addComponent(masksCmbo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(remMaskBtn, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(maskBrowseBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(maskLbl)
                    .addComponent(maskBrowseField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maskBrowseBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loadedMasksLbl)
                    .addComponent(masksCmbo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(remMaskBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newImgJobBtn)
                    .addComponent(remJobBtn)
                    .addComponent(copyJobBtn)
                    .addComponent(renameBtn)
                    .addComponent(newPDFJobBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jobTabs, javax.swing.GroupLayout.DEFAULT_SIZE, 441, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(runJobsBtn))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void newImgJobBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newImgJobBtnActionPerformed
        createImageJob();
    }//GEN-LAST:event_newImgJobBtnActionPerformed

    private void remJobBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remJobBtnActionPerformed
        int id = jobTabs.getSelectedIndex();
        ResizeJob job = jobs.remove(id);
        if( job instanceof ImageJob ) {
            imageJobs--;
        } else if( job instanceof PDFJob ) {
            PDFJobs--;
        }
        jobTabs.remove(id);
    }//GEN-LAST:event_remJobBtnActionPerformed

    private void maskBrowseFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maskBrowseFieldActionPerformed
        File test = new File( maskBrowseField.getText() );
        if( test != null && test.isFile() ) {
            masksModel.addElement( test );
        }
    }//GEN-LAST:event_maskBrowseFieldActionPerformed

    private void maskBrowseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maskBrowseBtnActionPerformed
        fc.setFileSelectionMode( JFileChooser.FILES_ONLY );
        fc.setMultiSelectionEnabled(false);
        int rv = fc.showOpenDialog(this);
        if( rv == JFileChooser.APPROVE_OPTION ) {
            if( fc.getSelectedFile() != null ) {
                if( FileCheck.isImageFile(fc.getSelectedFile()) ) {
                    masksModel.addElement( fc.getSelectedFile() );
                } else {
                    JOptionPane.showMessageDialog(this, "Please select a supported image file", "Incompatible file", JOptionPane.ERROR_MESSAGE );
                }
            }
        }
    }//GEN-LAST:event_maskBrowseBtnActionPerformed

    private void runJobsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runJobsBtnActionPerformed
        SwingWorker worker = new SwingWorker<Integer, Integer>() {
            @Override
            protected Integer doInBackground() throws Exception {                
                for( ResizeJob job : jobs ) {
                    job.run(System.out);
                }
                return 42;
            }
        };
        worker.addPropertyChangeListener((PropertyChangeEvent evt1) -> {
            if( worker.getState() == StateValue.STARTED ) {
                runJobsBtn.setText(PROCESS_RUNNING);
            }
            if( worker.getState() == SwingWorker.StateValue.DONE ) {
                runJobsBtn.setText(PROCESS_READY);
            }
        });
        worker.execute();
    }//GEN-LAST:event_runJobsBtnActionPerformed

    private void remMaskBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remMaskBtnActionPerformed
        int id = masksCmbo.getSelectedIndex();
        if( masksModel.getElementAt(id) instanceof File ) {
            masksModel.removeElementAt(id);
        }
    }//GEN-LAST:event_remMaskBtnActionPerformed

    private void copyJobBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyJobBtnActionPerformed
        int id = jobTabs.getSelectedIndex();
        ResizeJob job =  jobs.get(id);
        ResizeJob newJob = null;
        JobPanel pnl = null;
        if( job instanceof ImageJob ) {
            newJob = new ImageJob((ImageJob) job);
            pnl = new ImageJobPanel( (ImageJob) newJob);
        } else if( job instanceof PDFJob ) {
            newJob = new PDFJob((PDFJob) job);
            pnl = new PDFJobPanel( (PDFJob) newJob);
        }
        if( newJob != null ) {
            jobs.add( newJob );
            jobTabs.add( "Job " + (jobTabs.getTabCount() + 1), pnl );
            jobTabs.setSelectedIndex( jobTabs.getTabCount() - 1 );
        }
    }//GEN-LAST:event_copyJobBtnActionPerformed

    private void renameBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_renameBtnActionPerformed
        String input = JOptionPane.showInputDialog(this, "Job Name", "Set Job Name", JOptionPane.INFORMATION_MESSAGE );
        if( input != null && !input.isEmpty() ) {
            jobTabs.setTitleAt( jobTabs.getSelectedIndex(), input );
        }
    }//GEN-LAST:event_renameBtnActionPerformed

    private void newPDFJobBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newPDFJobBtnActionPerformed
        createPDFJob();
    }//GEN-LAST:event_newPDFJobBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton copyJobBtn;
    private javax.swing.JTabbedPane jobTabs;
    private javax.swing.JLabel loadedMasksLbl;
    private javax.swing.JButton maskBrowseBtn;
    private javax.swing.JTextField maskBrowseField;
    private javax.swing.JLabel maskLbl;
    public javax.swing.JComboBox<String> masksCmbo;
    private javax.swing.JButton newImgJobBtn;
    private javax.swing.JButton newPDFJobBtn;
    private javax.swing.JButton remJobBtn;
    private javax.swing.JButton remMaskBtn;
    private javax.swing.JButton renameBtn;
    private javax.swing.JButton runJobsBtn;
    // End of variables declaration//GEN-END:variables
}
